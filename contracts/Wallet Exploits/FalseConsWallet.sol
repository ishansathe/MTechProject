//SPDX-License-Identifier:MIT
pragma solidity ^0.8.10;

/* User can add pay in and withdraw Ether.
   A function is created instead of a constructor, 
   so anyone can become 'creator' and withdraw all funds.
*/
contract FalseConsWallet {
    address public creator;
    mapping(address => uint256) balances;
    
    function initWallet() public {
        creator = msg.sender;
    }
    //Whenever this function is called, a new creator is assigned.

    function deposit() public payable {
        assert(balances[msg.sender] + msg.value > balances[msg.sender]);
        balances[msg.sender] += msg.value;
    }

    function withdraw(uint256 amount) public {
        require(amount <= balances[msg.sender]);
        payable(msg.sender).transfer(amount);
        balances[msg.sender] -= amount;
    }

    // In an emergency the owner can migrate  allfunds to a different address.

    function migrateTo(address payable to) public {
        require(creator == msg.sender);
        to.transfer(address(this).balance);
    }

}