import {ethers, network} from "hardhat"

async function main() {

    const [, acc2 ] = await ethers.getSigners()

    const vuln = await ethers.getContractFactory("Vulnerable")
    const Vuln = await vuln.connect(acc2).deploy()

    const expl = await ethers.getContractFactory("Exploit")
    const Expl = await expl.deploy(Vuln.target)


    await acc2.sendTransaction({ to: Vuln.target, value: ethers.parseEther("1")})

    var vulnOldBal = await ethers.provider.getBalance(Vuln.target)
    var expOldBal = await ethers.provider.getBalance(Expl.target)
    console.log(`Balance of Vulnerable contract before exploit: ${vulnOldBal}`)
    console.log(`Balance of Attacker contract before exploit: ${expOldBal}`)

    await Expl.exploit()
    // Default account (i.e., acc1) will now be the attacker

    var vulnNewBal = await ethers.provider.getBalance(Vuln.target)
    var expNewBal = await ethers.provider.getBalance(Expl.target)

    console.log(`The balance of vulnerable contract after exploit is: ${vulnNewBal}`)
    console.log(`The balance of attacker contract after exploit is: ${expNewBal}`)
    
}
main().catch((error) => {
    console.error(error)
    process.exitCode=1
})